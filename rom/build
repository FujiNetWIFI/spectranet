#!/bin/sh
# note, the order of ASMSOURCES is important.
ASMSOURCES=( sysvars rommodconfig_en rommodconfig_es datarom datarom_es \
             configutilrom configutilrom_es configutil utilrom utilrom_es \
             tnfs rom jumptable \
	     romimage romimage_es romprog \
	     romprog_es )

rm -f *.out
rm -f *.sym
rm -f *.lst

BUILDER=`whoami`
BUILDHOST=`hostname -s`
BUILDREV=undef

if [ "$1" == "public" ]
then
   svn up
   BUILDREV=`svn info . | grep -m 1 Rev | cut -d ' ' -f 2`
fi
echo bldstr defb \"\($BUILDER\@$BUILDHOST r=$BUILDREV\)\",0x0a,0 > ver.asm

for src in ${ASMSOURCES[@]}
do
   echo "Assembling $src..."
   sjasmplus $src.asm --sym=$src.sym --lst=$src.lst >.output
   if [ "$?" != "0" ]; then
      echo
      echo "Assembly failed:"
      cat .output
      echo
      exit
   fi

   # should we generate the table ROM functions?
   if [ "$src" == "utilrom" ]; then
      echo "Generating dependent function symbol table for rom..."
      grep u_impl utilrom.sym >impl.sym
   fi

   if [ "$src" == "tnfs" ]; then
      echo "Generating dependent function symbol table for rom..."
      grep F_machinetype tnfs.sym >>impl.sym
   fi
done

